Terminals unused in grammar

    TOKEN_IRET
    TOKEN_CALL
    TOKEN_RET
    TOKEN_JMP
    TOKEN_BEQ
    TOKEN_BNE
    TOKEN_BGT
    TOKEN_PUSH
    TOKEN_POP
    TOKEN_LD
    TOKEN_ST
    TOKEN_LPAR
    TOKEN_RPAR
    TOKEN_LBRACKET
    TOKEN_RBRACKET
    TOKEN_PLUS
    TOKEN_MINUS
    TOKEN_PERCENT
    TOKEN_DOLLAR
    TOKEN_SEMI
    TOKEN_SP
    TOKEN_PC


Grammar

    0 $accept: prog $end

    1 prog: statements

    2 statements: ε
    3           | statements statement

    4 statement: directive
    5          | instr

    6 directive: TOKEN_GLOBAL global_list
    7          | TOKEN_EXTERN extern_list
    8          | TOKEN_SECTION TOKEN_IDENT
    9          | TOKEN_WORD word_list
   10          | TOKEN_SKIP TOKEN_NUM
   11          | TOKEN_ASCII TOKEN_STRING
   12          | TOKEN_END
   13          | TOKEN_IDENT TOKEN_COLON

   14 global_list: TOKEN_IDENT
   15            | global_list TOKEN_COMMA TOKEN_IDENT

   16 extern_list: TOKEN_IDENT
   17            | extern_list TOKEN_COMMA TOKEN_IDENT

   18 word_list: word
   19          | word_list TOKEN_COMMA word

   20 word: TOKEN_IDENT
   21     | TOKEN_NUM

   22 instr: TOKEN_HALT
   23      | TOKEN_INT
   24      | TOKEN_ADD TOKEN_REG TOKEN_COMMA TOKEN_REG
   25      | TOKEN_SUB TOKEN_REG TOKEN_COMMA TOKEN_REG
   26      | TOKEN_MUL TOKEN_REG TOKEN_COMMA TOKEN_REG
   27      | TOKEN_DIV TOKEN_REG TOKEN_COMMA TOKEN_REG
   28      | TOKEN_NOT TOKEN_REG
   29      | TOKEN_AND TOKEN_REG TOKEN_COMMA TOKEN_REG
   30      | TOKEN_OR TOKEN_REG TOKEN_COMMA TOKEN_REG
   31      | TOKEN_XOR TOKEN_REG TOKEN_COMMA TOKEN_REG
   32      | TOKEN_SHL TOKEN_REG TOKEN_COMMA TOKEN_REG
   33      | TOKEN_SHR TOKEN_REG TOKEN_COMMA TOKEN_REG
   34      | TOKEN_XCHG TOKEN_REG TOKEN_COMMA TOKEN_REG
   35      | TOKEN_CSRRD sys_reg TOKEN_COMMA TOKEN_REG
   36      | TOKEN_CSRWR TOKEN_REG TOKEN_COMMA sys_reg

   37 sys_reg: TOKEN_STATUS
   38        | TOKEN_HANDLER
   39        | TOKEN_CAUSE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_HALT <op_code> (258) 22
    TOKEN_INT <op_code> (259) 23
    TOKEN_IRET <op_code> (260)
    TOKEN_CALL <op_code> (261)
    TOKEN_RET <op_code> (262)
    TOKEN_JMP <op_code> (263)
    TOKEN_BEQ <op_code> (264)
    TOKEN_BNE <op_code> (265)
    TOKEN_BGT <op_code> (266)
    TOKEN_PUSH <op_code> (267)
    TOKEN_POP <op_code> (268)
    TOKEN_XCHG <op_code> (269) 34
    TOKEN_ADD <op_code> (270) 24
    TOKEN_SUB <op_code> (271) 25
    TOKEN_MUL <op_code> (272) 26
    TOKEN_DIV <op_code> (273) 27
    TOKEN_NOT <op_code> (274) 28
    TOKEN_AND <op_code> (275) 29
    TOKEN_OR <op_code> (276) 30
    TOKEN_XOR <op_code> (277) 31
    TOKEN_SHL <op_code> (278) 32
    TOKEN_SHR <op_code> (279) 33
    TOKEN_LD <op_code> (280)
    TOKEN_ST <op_code> (281)
    TOKEN_CSRRD <op_code> (282) 35
    TOKEN_CSRWR <op_code> (283) 36
    TOKEN_GLOBAL (284) 6
    TOKEN_EXTERN (285) 7
    TOKEN_SECTION (286) 8
    TOKEN_WORD (287) 9
    TOKEN_SKIP (288) 10
    TOKEN_ASCII (289) 11
    TOKEN_END (290) 12
    TOKEN_IDENT <ident> (291) 8 13 14 15 16 17 20
    TOKEN_LPAR (292)
    TOKEN_RPAR (293)
    TOKEN_LBRACKET (294)
    TOKEN_RBRACKET (295)
    TOKEN_PLUS (296)
    TOKEN_MINUS (297)
    TOKEN_PERCENT (298)
    TOKEN_DOLLAR (299)
    TOKEN_SEMI (300)
    TOKEN_COLON (301) 13
    TOKEN_COMMA (302) 15 17 19 24 25 26 27 29 30 31 32 33 34 35 36
    TOKEN_REG <num> (303) 24 25 26 27 28 29 30 31 32 33 34 35 36
    TOKEN_SP (304)
    TOKEN_PC (305)
    TOKEN_STATUS <ident> (306) 37
    TOKEN_HANDLER <ident> (307) 38
    TOKEN_CAUSE <ident> (308) 39
    TOKEN_NUM (309) 10 21
    TOKEN_STRING (310) 11


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    prog (57)
        on left: 1
        on right: 0
    statements (58)
        on left: 2 3
        on right: 1 3
    statement (59)
        on left: 4 5
        on right: 3
    directive (60)
        on left: 6 7 8 9 10 11 12 13
        on right: 4
    global_list (61)
        on left: 14 15
        on right: 6 15
    extern_list (62)
        on left: 16 17
        on right: 7 17
    word_list (63)
        on left: 18 19
        on right: 9 19
    word (64)
        on left: 20 21
        on right: 18 19
    instr (65)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 5
    sys_reg <ident> (66)
        on left: 37 38 39
        on right: 35 36


State 0

    0 $accept: • prog $end

    $default  reduce using rule 2 (statements)

    prog        go to state 1
    statements  go to state 2


State 1

    0 $accept: prog • $end

    $end  shift, and go to state 3


State 2

    1 prog: statements •
    3 statements: statements • statement

    TOKEN_HALT     shift, and go to state 4
    TOKEN_INT      shift, and go to state 5
    TOKEN_XCHG     shift, and go to state 6
    TOKEN_ADD      shift, and go to state 7
    TOKEN_SUB      shift, and go to state 8
    TOKEN_MUL      shift, and go to state 9
    TOKEN_DIV      shift, and go to state 10
    TOKEN_NOT      shift, and go to state 11
    TOKEN_AND      shift, and go to state 12
    TOKEN_OR       shift, and go to state 13
    TOKEN_XOR      shift, and go to state 14
    TOKEN_SHL      shift, and go to state 15
    TOKEN_SHR      shift, and go to state 16
    TOKEN_CSRRD    shift, and go to state 17
    TOKEN_CSRWR    shift, and go to state 18
    TOKEN_GLOBAL   shift, and go to state 19
    TOKEN_EXTERN   shift, and go to state 20
    TOKEN_SECTION  shift, and go to state 21
    TOKEN_WORD     shift, and go to state 22
    TOKEN_SKIP     shift, and go to state 23
    TOKEN_ASCII    shift, and go to state 24
    TOKEN_END      shift, and go to state 25
    TOKEN_IDENT    shift, and go to state 26

    $default  reduce using rule 1 (prog)

    statement  go to state 27
    directive  go to state 28
    instr      go to state 29


State 3

    0 $accept: prog $end •

    $default  accept


State 4

   22 instr: TOKEN_HALT •

    $default  reduce using rule 22 (instr)


State 5

   23 instr: TOKEN_INT •

    $default  reduce using rule 23 (instr)


State 6

   34 instr: TOKEN_XCHG • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 30


State 7

   24 instr: TOKEN_ADD • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 31


State 8

   25 instr: TOKEN_SUB • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 32


State 9

   26 instr: TOKEN_MUL • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 33


State 10

   27 instr: TOKEN_DIV • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 34


State 11

   28 instr: TOKEN_NOT • TOKEN_REG

    TOKEN_REG  shift, and go to state 35


State 12

   29 instr: TOKEN_AND • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 36


State 13

   30 instr: TOKEN_OR • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 37


State 14

   31 instr: TOKEN_XOR • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 38


State 15

   32 instr: TOKEN_SHL • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 39


State 16

   33 instr: TOKEN_SHR • TOKEN_REG TOKEN_COMMA TOKEN_REG

    TOKEN_REG  shift, and go to state 40


State 17

   35 instr: TOKEN_CSRRD • sys_reg TOKEN_COMMA TOKEN_REG

    TOKEN_STATUS   shift, and go to state 41
    TOKEN_HANDLER  shift, and go to state 42
    TOKEN_CAUSE    shift, and go to state 43

    sys_reg  go to state 44


State 18

   36 instr: TOKEN_CSRWR • TOKEN_REG TOKEN_COMMA sys_reg

    TOKEN_REG  shift, and go to state 45


State 19

    6 directive: TOKEN_GLOBAL • global_list

    TOKEN_IDENT  shift, and go to state 46

    global_list  go to state 47


State 20

    7 directive: TOKEN_EXTERN • extern_list

    TOKEN_IDENT  shift, and go to state 48

    extern_list  go to state 49


State 21

    8 directive: TOKEN_SECTION • TOKEN_IDENT

    TOKEN_IDENT  shift, and go to state 50


State 22

    9 directive: TOKEN_WORD • word_list

    TOKEN_IDENT  shift, and go to state 51
    TOKEN_NUM    shift, and go to state 52

    word_list  go to state 53
    word       go to state 54


State 23

   10 directive: TOKEN_SKIP • TOKEN_NUM

    TOKEN_NUM  shift, and go to state 55


State 24

   11 directive: TOKEN_ASCII • TOKEN_STRING

    TOKEN_STRING  shift, and go to state 56


State 25

   12 directive: TOKEN_END •

    $default  reduce using rule 12 (directive)


State 26

   13 directive: TOKEN_IDENT • TOKEN_COLON

    TOKEN_COLON  shift, and go to state 57


State 27

    3 statements: statements statement •

    $default  reduce using rule 3 (statements)


State 28

    4 statement: directive •

    $default  reduce using rule 4 (statement)


State 29

    5 statement: instr •

    $default  reduce using rule 5 (statement)


State 30

   34 instr: TOKEN_XCHG TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 58


State 31

   24 instr: TOKEN_ADD TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 59


State 32

   25 instr: TOKEN_SUB TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 60


State 33

   26 instr: TOKEN_MUL TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 61


State 34

   27 instr: TOKEN_DIV TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 62


State 35

   28 instr: TOKEN_NOT TOKEN_REG •

    $default  reduce using rule 28 (instr)


State 36

   29 instr: TOKEN_AND TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 63


State 37

   30 instr: TOKEN_OR TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 64


State 38

   31 instr: TOKEN_XOR TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 65


State 39

   32 instr: TOKEN_SHL TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 66


State 40

   33 instr: TOKEN_SHR TOKEN_REG • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 67


State 41

   37 sys_reg: TOKEN_STATUS •

    $default  reduce using rule 37 (sys_reg)


State 42

   38 sys_reg: TOKEN_HANDLER •

    $default  reduce using rule 38 (sys_reg)


State 43

   39 sys_reg: TOKEN_CAUSE •

    $default  reduce using rule 39 (sys_reg)


State 44

   35 instr: TOKEN_CSRRD sys_reg • TOKEN_COMMA TOKEN_REG

    TOKEN_COMMA  shift, and go to state 68


State 45

   36 instr: TOKEN_CSRWR TOKEN_REG • TOKEN_COMMA sys_reg

    TOKEN_COMMA  shift, and go to state 69


State 46

   14 global_list: TOKEN_IDENT •

    $default  reduce using rule 14 (global_list)


State 47

    6 directive: TOKEN_GLOBAL global_list •
   15 global_list: global_list • TOKEN_COMMA TOKEN_IDENT

    TOKEN_COMMA  shift, and go to state 70

    $default  reduce using rule 6 (directive)


State 48

   16 extern_list: TOKEN_IDENT •

    $default  reduce using rule 16 (extern_list)


State 49

    7 directive: TOKEN_EXTERN extern_list •
   17 extern_list: extern_list • TOKEN_COMMA TOKEN_IDENT

    TOKEN_COMMA  shift, and go to state 71

    $default  reduce using rule 7 (directive)


State 50

    8 directive: TOKEN_SECTION TOKEN_IDENT •

    $default  reduce using rule 8 (directive)


State 51

   20 word: TOKEN_IDENT •

    $default  reduce using rule 20 (word)


State 52

   21 word: TOKEN_NUM •

    $default  reduce using rule 21 (word)


State 53

    9 directive: TOKEN_WORD word_list •
   19 word_list: word_list • TOKEN_COMMA word

    TOKEN_COMMA  shift, and go to state 72

    $default  reduce using rule 9 (directive)


State 54

   18 word_list: word •

    $default  reduce using rule 18 (word_list)


State 55

   10 directive: TOKEN_SKIP TOKEN_NUM •

    $default  reduce using rule 10 (directive)


State 56

   11 directive: TOKEN_ASCII TOKEN_STRING •

    $default  reduce using rule 11 (directive)


State 57

   13 directive: TOKEN_IDENT TOKEN_COLON •

    $default  reduce using rule 13 (directive)


State 58

   34 instr: TOKEN_XCHG TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 73


State 59

   24 instr: TOKEN_ADD TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 74


State 60

   25 instr: TOKEN_SUB TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 75


State 61

   26 instr: TOKEN_MUL TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 76


State 62

   27 instr: TOKEN_DIV TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 77


State 63

   29 instr: TOKEN_AND TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 78


State 64

   30 instr: TOKEN_OR TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 79


State 65

   31 instr: TOKEN_XOR TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 80


State 66

   32 instr: TOKEN_SHL TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 81


State 67

   33 instr: TOKEN_SHR TOKEN_REG TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 82


State 68

   35 instr: TOKEN_CSRRD sys_reg TOKEN_COMMA • TOKEN_REG

    TOKEN_REG  shift, and go to state 83


State 69

   36 instr: TOKEN_CSRWR TOKEN_REG TOKEN_COMMA • sys_reg

    TOKEN_STATUS   shift, and go to state 41
    TOKEN_HANDLER  shift, and go to state 42
    TOKEN_CAUSE    shift, and go to state 43

    sys_reg  go to state 84


State 70

   15 global_list: global_list TOKEN_COMMA • TOKEN_IDENT

    TOKEN_IDENT  shift, and go to state 85


State 71

   17 extern_list: extern_list TOKEN_COMMA • TOKEN_IDENT

    TOKEN_IDENT  shift, and go to state 86


State 72

   19 word_list: word_list TOKEN_COMMA • word

    TOKEN_IDENT  shift, and go to state 51
    TOKEN_NUM    shift, and go to state 52

    word  go to state 87


State 73

   34 instr: TOKEN_XCHG TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 34 (instr)


State 74

   24 instr: TOKEN_ADD TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 24 (instr)


State 75

   25 instr: TOKEN_SUB TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 25 (instr)


State 76

   26 instr: TOKEN_MUL TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 26 (instr)


State 77

   27 instr: TOKEN_DIV TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 27 (instr)


State 78

   29 instr: TOKEN_AND TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 29 (instr)


State 79

   30 instr: TOKEN_OR TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 30 (instr)


State 80

   31 instr: TOKEN_XOR TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 31 (instr)


State 81

   32 instr: TOKEN_SHL TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 32 (instr)


State 82

   33 instr: TOKEN_SHR TOKEN_REG TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 33 (instr)


State 83

   35 instr: TOKEN_CSRRD sys_reg TOKEN_COMMA TOKEN_REG •

    $default  reduce using rule 35 (instr)


State 84

   36 instr: TOKEN_CSRWR TOKEN_REG TOKEN_COMMA sys_reg •

    $default  reduce using rule 36 (instr)


State 85

   15 global_list: global_list TOKEN_COMMA TOKEN_IDENT •

    $default  reduce using rule 15 (global_list)


State 86

   17 extern_list: extern_list TOKEN_COMMA TOKEN_IDENT •

    $default  reduce using rule 17 (extern_list)


State 87

   19 word_list: word_list TOKEN_COMMA word •

    $default  reduce using rule 19 (word_list)
